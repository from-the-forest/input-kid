[gd_scene load_steps=3 format=3 uid="uid://py63lw1ws5du"]

[ext_resource type="Texture2D" uid="uid://bdjvt3pjwrjtt" path="res://icon.svg" id="1_i05hc"]

[sub_resource type="GDScript" id="GDScript_4pgfv"]
script/source = "@tool
class_name AutoViewportSize
extends Control

const DEFAULT_UI_OFFSET_TOP: float = 0.0 # absolute top 
const DEFAULT_UI_OFFSET_LEFT: float = 0.0 # absolute left
const DEFAULT_UI_ANCHOR_TOP: float = 0.0 # 0% viewport height
const DEFAULT_UI_ANCHOR_LEFT: float = 0.0 # 0% viewport width
const DEFAULT_UI_ANCHOR_BOTTOM: float = 1.0 # 100% viewport height
const DEFAULT_UI_ANCHOR_RIGHT: float = 1.0 # 100% viewport width

func _enter_tree():
	_set_ui_anchor_defaults()
	_connect_project_settings_changed()
	_connect_root_viewport_size_changed()
	
	# configure the default ui container size
	# (enter tree with project window size)
	_update_ui_size()
	
func _exit_tree():
	_disconnect_project_settings_changed()
	_disconnect_root_viewport_size_changed()
	
func _connect_root_viewport_size_changed():
	if not get_tree().get_root().size_changed.is_connected(_update_ui_size):
			get_tree().get_root().size_changed.connect(_update_ui_size)
	
func _disconnect_root_viewport_size_changed():
	if get_tree().get_root().size_changed.is_connected(_update_ui_size):
			get_tree().get_root().size_changed.disconnect(_update_ui_size)
	
func _connect_project_settings_changed():
	if not ProjectSettings.settings_changed.is_connected(_update_ui_size):
			ProjectSettings.settings_changed.connect(_update_ui_size)
	
func _disconnect_project_settings_changed():
	if ProjectSettings.settings_changed.is_connected(_update_ui_size):
			ProjectSettings.settings_changed.disconnect(_update_ui_size)
	
func _update_ui_size():
	# is this script running in the editor or a game window
	# @TODO consider for refactoring into an Editor singlton.
	if get_tree().edited_scene_root:
		# Running in the editor, use Project Settings for sizing. 
		offset_bottom = ProjectSettings.get(\"display/window/size/viewport_height\")
		offset_right = ProjectSettings.get(\"display/window/size/viewport_width\")
	else:
		# Running in-game, use root viewport for sizing.
		var size: Vector2i = get_tree().get_root().size
		offset_bottom = size.y
		offset_right = size.x
		
func _set_ui_anchor_defaults():
	offset_top = DEFAULT_UI_OFFSET_TOP 
	offset_left = DEFAULT_UI_OFFSET_LEFT 
	anchor_top = DEFAULT_UI_ANCHOR_TOP 
	anchor_left = DEFAULT_UI_ANCHOR_LEFT 
	anchor_bottom = DEFAULT_UI_ANCHOR_BOTTOM 
	anchor_right = DEFAULT_UI_ANCHOR_RIGHT 
"

[node name="Node2D" type="Node2D"]

[node name="AutoViewportSize" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_right = 1152.0
offset_bottom = 648.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource("GDScript_4pgfv")

[node name="TextureRect" type="TextureRect" parent="AutoViewportSize"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource("1_i05hc")
expand_mode = 1
stretch_mode = 5
